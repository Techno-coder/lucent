=====================================
Comments
=====================================

fn function() // truth
	// true
	true

---

(source (function (identifier)
	(block (truth))))

=====================================
Functions
=====================================

fn function(first: type, second: type) truth
	true

---

(source
	(function
		name: (identifier)
		parameter: (parameter
			name: (identifier)
			type: (path (identifier)))
		parameter: (parameter
			name: (identifier)
			type: (path (identifier)))
		return: (path (identifier))
		block: (block (truth))))

=====================================
Void functions
=====================================

fn function(parameter: type)
	true

---

(source
	(function
		name: (identifier)
		parameter: (parameter
			name: (identifier)
			type: (path (identifier)))
		block: (block (truth))))

=====================================
Expression functions
=====================================

fn function() truth = true

---

(source
	(function
		name: (identifier)
		return: (path (identifier))
		block: (truth)))

=====================================
Calling conventions
=====================================

cdecl fn function() truth = true

---

(source
	(function
		convention: (identifier)
		name: (identifier)
		return: (path (identifier))
		block: (truth)))

=====================================
Root functions
=====================================

root fn function() truth = true

---

(source
	(function
		root: (root)
		name: (identifier)
		return: (path (identifier))
		block: (truth)))

=====================================
Static variables
=====================================

static identifier: truth = true
static identifier: truth
static identifier = true

---

(source
	(static
		name: (identifier)
		type: (path (identifier))
		value: (truth))
	(static
		name: (identifier)
		type: (path (identifier)))
	(static
		name: (identifier)
		value: (truth)))

=====================================
Modules
=====================================

module Module
	module Module
		fn function()
			true

	static variable: truth

---

(source
	(module (identifier)
		(module (identifier)
			(function (identifier) (block (truth))))
		(static (identifier) (path (identifier)))))

=====================================
Structures
=====================================

data Structure
	field: truth
	other: truth

---

(source (data (identifier)
	(field (identifier) (path (identifier)))
	(field (identifier) (path (identifier)))))

=====================================
Annotations
=====================================

@annotation parameter
module Module
	static variable: truth

@@annotation parameter

---

(source
	(module (annotation (identifier) (path (identifier)))
		(identifier) (static (identifier) (path (identifier))))
	(global_annotation (identifier) (path (identifier))))

=====================================
Imports
=====================================

load "path" as identifier
load "path" with "path"
load "path" with "path" as identifier
load identifier.function as fn function(type) type
load identifier.0x0000 as convention fn function()
load identifier.symbol as variable: type

---

(source
	(load (string) (identifier))
	(load (string) (string))
	(load (string) (string) (identifier))
	(load (identifier) (identifier)
		(signature (identifier) (path (identifier))
			(path (identifier))))
	(load (identifier) (integral)
		(signature (identifier) (identifier)))
	(load (identifier) (identifier)
		(static (identifier) (path (identifier)))))

=====================================
Uses
=====================================

use "path"
use "path" as identifier
use identifier.*
use identifier

---

(source
	(use (string))
	(use (string) (identifier))
	(use (identifier) (wild))
	(use (identifier)))
